<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-06-21T20:00:50 EDT" name="Suite1" finished-at="2022-06-21T20:00:58 EDT" duration-ms="8026">
    <groups>
    </groups>
    <test started-at="2022-06-21T20:00:50 EDT" name="Test1" finished-at="2022-06-21T20:00:58 EDT" duration-ms="8026">
      <class name="com.RCC.TestData.SampleTestCase">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.RCC.TestData.SampleTestCase@5efa40fe]" started-at="2022-06-21T20:00:57 EDT" name="setUp" finished-at="2022-06-21T20:00:58 EDT" duration-ms="1382" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="test1()[pri:0, instance:com.RCC.TestData.SampleTestCase@5efa40fe]" started-at="2022-06-21T20:00:58 EDT" name="test1" finished-at="2022-06-21T20:00:58 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method signature="test2()[pri:0, instance:com.RCC.TestData.SampleTestCase@5efa40fe]" started-at="2022-06-21T20:00:58 EDT" name="test2" finished-at="2022-06-21T20:00:58 EDT" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [False] but found [True]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [False] but found [True]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at com.RCC.TestData.SampleTestCase.test2(SampleTestCase.java:13)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.RCC.TestData.SampleTestCase@5efa40fe]" started-at="2022-06-21T20:00:58 EDT" name="tearDown" finished-at="2022-06-21T20:00:58 EDT" duration-ms="98" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.RCC.TestData.SampleTestCase -->
      <class name="com.RCC.TestData.TC_AlertTest_100">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.RCC.TestData.TC_AlertTest_100@5d908d47]" started-at="2022-06-21T20:00:50 EDT" name="setUp" finished-at="2022-06-21T20:00:53 EDT" duration-ms="2770" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkingAlert()[pri:0, instance:com.RCC.TestData.TC_AlertTest_100@5d908d47]" started-at="2022-06-21T20:00:53 EDT" name="checkingAlert" finished-at="2022-06-21T20:00:56 EDT" duration-ms="3220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkingAlert -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.RCC.TestData.TC_AlertTest_100@5d908d47]" started-at="2022-06-21T20:00:56 EDT" name="tearDown" finished-at="2022-06-21T20:00:57 EDT" duration-ms="243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.RCC.TestData.TC_AlertTest_100 -->
    </test> <!-- Test1 -->
  </suite> <!-- Suite1 -->
</testng-results>
